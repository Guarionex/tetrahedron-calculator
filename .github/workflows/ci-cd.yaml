name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'" --health-interval=10s --health-retries=5 --health-timeout=5s

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11 for Backend
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set execute permission for gradlew
        run: chmod +x ./backend/gradlew

      - name: Build Backend with Gradle
        run: ./gradlew build -Dspring.profiles.active=test
        working-directory: ./backend

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tetrahedron-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/tetrahedron-backend:latest

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build Frontend
        run: npm install && npm run build
        working-directory: ./frontend

      - name: Build and Push Frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tetrahedron-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/tetrahedron-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s/mongo-deployment.yaml
          kubectl apply -f ./k8s/mongo-service.yaml
          kubectl apply -f ./k8s/backend-deployment.yaml
          kubectl apply -f ./k8s/backend-service.yaml
          kubectl apply -f ./k8s/frontend-deployment.yaml
          kubectl apply -f ./k8s/frontend-service.yaml
